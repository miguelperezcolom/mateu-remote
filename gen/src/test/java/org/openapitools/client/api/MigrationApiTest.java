/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchDto;
import org.openapitools.client.model.ExceptionDto;
import org.openapitools.client.model.MigrationExecutionDto;
import org.openapitools.client.model.MigrationPlanDto;
import org.openapitools.client.model.MigrationPlanGenerationDto;
import org.openapitools.client.model.MigrationPlanReportDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MigrationApi
 */
@Ignore
public class MigrationApiTest {

    private final MigrationApi api = new MigrationApi();

    
    /**
     * Execute Migration Plan
     *
     * Executes a migration plan synchronously for multiple process instances. To execute a migration plan asynchronously, use the [Execute Migration Plan Async(Batch)](https://docs.camunda.org/manual/7.18/reference/rest/migration/execute-migration-async/) method.  For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of [the user guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/process-instance-migration/#executing-a-migration-plan).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeMigrationPlanTest() throws ApiException {
        MigrationExecutionDto migrationExecutionDto = null;
        api.executeMigrationPlan(migrationExecutionDto);

        // TODO: test validations
    }
    
    /**
     * Execute Migration Plan Async (Batch)
     *
     * Executes a migration plan asynchronously (batch) for multiple process instances. To execute a migration plan synchronously, use the [Execute MigrationPlan](https://docs.camunda.org/manual/7.18/reference/rest/migration/execute-migration/) method.  For more information about the difference between synchronous and asynchronous execution of a migration plan, please refer to the related section of [the user guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/process-instance-migration/#executing-a-migration-plan).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeMigrationPlanAsyncTest() throws ApiException {
        MigrationExecutionDto migrationExecutionDto = null;
        BatchDto response = api.executeMigrationPlanAsync(migrationExecutionDto);

        // TODO: test validations
    }
    
    /**
     * Generate Migration Plan
     *
     * Generates a migration plan for two process definitions. The generated migration plan contains migration instructions which map equal activities between the two process definitions.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateMigrationPlanTest() throws ApiException {
        MigrationPlanGenerationDto migrationPlanGenerationDto = null;
        MigrationPlanDto response = api.generateMigrationPlan(migrationPlanGenerationDto);

        // TODO: test validations
    }
    
    /**
     * Validate Migration Plan
     *
     * Validates a migration plan statically without executing it. This corresponds to the [creation time validation](https://docs.camunda.org/manual/7.18/user-guide/process-engine/process-instance-migration/#creation-time-validation) described in the user guide.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateMigrationPlanTest() throws ApiException {
        MigrationPlanDto migrationPlanDto = null;
        MigrationPlanReportDto response = api.validateMigrationPlan(migrationPlanDto);

        // TODO: test validations
    }
    
}
