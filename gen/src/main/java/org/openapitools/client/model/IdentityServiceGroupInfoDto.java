/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.IdentityServiceGroupDto;
import org.openapitools.client.model.IdentityServiceUserDto;

/**
 * IdentityServiceGroupInfoDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-24T18:24:37.267768300+01:00[Europe/Paris]")
public class IdentityServiceGroupInfoDto {
  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private List<IdentityServiceGroupDto> groups = null;

  public static final String SERIALIZED_NAME_GROUP_USERS = "groupUsers";
  @SerializedName(SERIALIZED_NAME_GROUP_USERS)
  private List<IdentityServiceUserDto> groupUsers = null;


  public IdentityServiceGroupInfoDto groups(List<IdentityServiceGroupDto> groups) {
    
    this.groups = groups;
    return this;
  }

  public IdentityServiceGroupInfoDto addGroupsItem(IdentityServiceGroupDto groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<IdentityServiceGroupDto>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * An array of group objects.
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of group objects.")

  public List<IdentityServiceGroupDto> getGroups() {
    return groups;
  }


  public void setGroups(List<IdentityServiceGroupDto> groups) {
    this.groups = groups;
  }


  public IdentityServiceGroupInfoDto groupUsers(List<IdentityServiceUserDto> groupUsers) {
    
    this.groupUsers = groupUsers;
    return this;
  }

  public IdentityServiceGroupInfoDto addGroupUsersItem(IdentityServiceUserDto groupUsersItem) {
    if (this.groupUsers == null) {
      this.groupUsers = new ArrayList<IdentityServiceUserDto>();
    }
    this.groupUsers.add(groupUsersItem);
    return this;
  }

   /**
   * An array that contains all users that are member in one of the groups.
   * @return groupUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array that contains all users that are member in one of the groups.")

  public List<IdentityServiceUserDto> getGroupUsers() {
    return groupUsers;
  }


  public void setGroupUsers(List<IdentityServiceUserDto> groupUsers) {
    this.groupUsers = groupUsers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityServiceGroupInfoDto identityServiceGroupInfoDto = (IdentityServiceGroupInfoDto) o;
    return Objects.equals(this.groups, identityServiceGroupInfoDto.groups) &&
        Objects.equals(this.groupUsers, identityServiceGroupInfoDto.groupUsers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groups, groupUsers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityServiceGroupInfoDto {\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    groupUsers: ").append(toIndentedString(groupUsers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

