/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ExceptionDto;
import org.openapitools.client.model.ParseExceptionDtoAllOf;
import org.openapitools.client.model.ResourceReportDto;

/**
 * ParseExceptionDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-24T18:24:37.267768300+01:00[Europe/Paris]")
public class ParseExceptionDto {
  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private Map<String, ResourceReportDto> details = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private BigDecimal code;


  public ParseExceptionDto details(Map<String, ResourceReportDto> details) {
    
    this.details = details;
    return this;
  }

  public ParseExceptionDto putDetailsItem(String key, ResourceReportDto detailsItem) {
    if (this.details == null) {
      this.details = new HashMap<String, ResourceReportDto>();
    }
    this.details.put(key, detailsItem);
    return this;
  }

   /**
   * A JSON Object containing list of errors and warnings occurred during deployment.
   * @return details
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A JSON Object containing list of errors and warnings occurred during deployment.")

  public Map<String, ResourceReportDto> getDetails() {
    return details;
  }


  public void setDetails(Map<String, ResourceReportDto> details) {
    this.details = details;
  }


  public ParseExceptionDto type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * An exception class indicating the occurred error.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An exception class indicating the occurred error.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ParseExceptionDto message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * A detailed message of the error.
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A detailed message of the error.")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public ParseExceptionDto code(BigDecimal code) {
    
    this.code = code;
    return this;
  }

   /**
   * The code allows your client application to identify the error in an automated fashion. You can look up the meaning of all built-in codes and learn how to add custom codes in the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/error-handling/#exception-codes).
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The code allows your client application to identify the error in an automated fashion. You can look up the meaning of all built-in codes and learn how to add custom codes in the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/error-handling/#exception-codes).")

  public BigDecimal getCode() {
    return code;
  }


  public void setCode(BigDecimal code) {
    this.code = code;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParseExceptionDto parseExceptionDto = (ParseExceptionDto) o;
    return Objects.equals(this.details, parseExceptionDto.details) &&
        Objects.equals(this.type, parseExceptionDto.type) &&
        Objects.equals(this.message, parseExceptionDto.message) &&
        Objects.equals(this.code, parseExceptionDto.code);
  }

  @Override
  public int hashCode() {
    return Objects.hash(details, type, message, code);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParseExceptionDto {\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

